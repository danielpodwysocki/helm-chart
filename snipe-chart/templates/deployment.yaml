apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "snipe-chart.fullname" . }}
  labels:
    {{- include "snipe-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "snipe-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snipe-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "snipe-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: APP_KEY
              value: "{{ .Values.snipe.APP_KEY }}"
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ .Values.snipe.MYSQL_ROOT_PASSWORD }}"
            - name: MYSQL_DATABASE
              value: "{{ .Values.snipe.MYSQL_DATABASE }}"
            - name: MYSQL_USER
              value: "{{ .Values.snipe.MYSQL_USER }}"
            - name: MYSQL_PASSWORD
              value: "{{ .Values.snipe.MYSQL_PASSWORD }}"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: snipe-mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ .Values.snipe.MYSQL_ROOT_PASSWORD }}"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: snipe-mysql
          mountPath: /var/lib/mysql
      volumes:
      - name: snipe-mysql
        persistentVolumeClaim:
          claimName: snipe-mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snipe-mysql 
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2048Mi

